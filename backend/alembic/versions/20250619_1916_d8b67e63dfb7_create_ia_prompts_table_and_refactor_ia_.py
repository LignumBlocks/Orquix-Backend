"""create_ia_prompts_table_and_refactor_ia_responses

Revision ID: d8b67e63dfb7
Revises: d02f6b22b95a
Create Date: 2025-06-19 19:16:39.633842

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd8b67e63dfb7'
down_revision: Union[str, None] = 'd02f6b22b95a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_conversation_history_deleted_at'), table_name='conversation_history')
    op.drop_index(op.f('ix_conversation_history_interaction_event_id'), table_name='conversation_history')
    op.drop_index(op.f('ix_conversation_history_is_follow_up'), table_name='conversation_history')
    op.drop_index(op.f('ix_conversation_history_previous_interaction_id'), table_name='conversation_history')
    op.drop_index(op.f('ix_conversation_history_project_created'), table_name='conversation_history')
    op.drop_index(op.f('ix_conversation_history_project_id'), table_name='conversation_history')
    op.drop_index(op.f('ix_conversation_history_relevance'), table_name='conversation_history')
    op.drop_index(op.f('ix_conversation_history_user_id'), table_name='conversation_history')
    op.drop_table('conversation_history')
    op.drop_index(op.f('ix_context_sessions_deleted_at'), table_name='context_sessions')
    op.drop_index(op.f('ix_context_sessions_project_id'), table_name='context_sessions')
    op.drop_index(op.f('ix_context_sessions_user_id'), table_name='context_sessions')
    op.drop_table('context_sessions')
    op.alter_column('ia_responses', 'project_id',
               existing_type=sa.UUID(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('ia_responses', 'project_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.create_table('context_sessions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('conversation_history', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('accumulated_context', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('context_sessions_project_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('context_sessions_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('context_sessions_pkey'))
    )
    op.create_index(op.f('ix_context_sessions_user_id'), 'context_sessions', ['user_id'], unique=False)
    op.create_index(op.f('ix_context_sessions_project_id'), 'context_sessions', ['project_id'], unique=False)
    op.create_index(op.f('ix_context_sessions_deleted_at'), 'context_sessions', ['deleted_at'], unique=False)
    op.create_table('conversation_history',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('interaction_event_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('previous_interaction_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('relevance_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('is_follow_up', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('reference_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['interaction_event_id'], ['interaction_events.id'], name=op.f('conversation_history_interaction_event_id_fkey')),
    sa.ForeignKeyConstraint(['previous_interaction_id'], ['interaction_events.id'], name=op.f('conversation_history_previous_interaction_id_fkey')),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('conversation_history_project_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('conversation_history_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('conversation_history_pkey'))
    )
    op.create_index(op.f('ix_conversation_history_user_id'), 'conversation_history', ['user_id'], unique=False)
    op.create_index(op.f('ix_conversation_history_relevance'), 'conversation_history', ['relevance_score'], unique=False)
    op.create_index(op.f('ix_conversation_history_project_id'), 'conversation_history', ['project_id'], unique=False)
    op.create_index(op.f('ix_conversation_history_project_created'), 'conversation_history', ['project_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_conversation_history_previous_interaction_id'), 'conversation_history', ['previous_interaction_id'], unique=False)
    op.create_index(op.f('ix_conversation_history_is_follow_up'), 'conversation_history', ['is_follow_up'], unique=False)
    op.create_index(op.f('ix_conversation_history_interaction_event_id'), 'conversation_history', ['interaction_event_id'], unique=False)
    op.create_index(op.f('ix_conversation_history_deleted_at'), 'conversation_history', ['deleted_at'], unique=False)
    # ### end Alembic commands ###

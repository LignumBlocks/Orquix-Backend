"""Initial migration

Revision ID: a9f33085b59a
Revises: 
Create Date: 2025-05-29 13:40:08.281473

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision: str = 'a9f33085b59a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('moderated_syntheses',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('synthesis_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_moderated_syntheses_deleted_at'), 'moderated_syntheses', ['deleted_at'], unique=False)
    op.create_table('users',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('google_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_deleted_at'), 'users', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_table('projects',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('moderator_personality', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('moderator_temperature', sa.Float(), nullable=False),
    sa.Column('moderator_length_penalty', sa.Float(), nullable=False),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_deleted_at'), 'projects', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_projects_user_id'), 'projects', ['user_id'], unique=False)
    op.create_table('context_chunks',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('content_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content_embedding', pgvector.sqlalchemy.Vector(dim=1536), nullable=False),
    sa.Column('source_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source_identifier', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_context_chunks_deleted_at'), 'context_chunks', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_context_chunks_project_id'), 'context_chunks', ['project_id'], unique=False)
    op.create_index(op.f('ix_context_chunks_source_identifier'), 'context_chunks', ['source_identifier'], unique=False)
    op.create_index(op.f('ix_context_chunks_source_type'), 'context_chunks', ['source_type'], unique=False)
    op.create_index(op.f('ix_context_chunks_user_id'), 'context_chunks', ['user_id'], unique=False)
    op.create_table('research_sessions',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('session_start_time', sa.DateTime(), nullable=False),
    sa.Column('initial_user_prompt', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('moderated_synthesis_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['moderated_synthesis_id'], ['moderated_syntheses.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_research_sessions_deleted_at'), 'research_sessions', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_research_sessions_project_id'), 'research_sessions', ['project_id'], unique=False)
    op.create_index(op.f('ix_research_sessions_user_id'), 'research_sessions', ['user_id'], unique=False)
    op.create_table('interaction_steps',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('session_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('step_order', sa.Integer(), nullable=False),
    sa.Column('user_prompt_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('context_used_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('moderator_synthesis_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('user_feedback_score', sa.Integer(), nullable=True),
    sa.Column('user_feedback_comment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['moderator_synthesis_id'], ['moderated_syntheses.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['research_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interaction_steps_deleted_at'), 'interaction_steps', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_interaction_steps_session_id'), 'interaction_steps', ['session_id'], unique=False)
    op.create_index(op.f('ix_interaction_steps_step_order'), 'interaction_steps', ['step_order'], unique=False)
    op.create_table('ia_responses',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('interaction_step_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('ia_provider_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('raw_response_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('latency_ms', sa.Integer(), nullable=False),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('received_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['interaction_step_id'], ['interaction_steps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ia_responses_deleted_at'), 'ia_responses', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_ia_responses_ia_provider_name'), 'ia_responses', ['ia_provider_name'], unique=False)
    op.create_index(op.f('ix_ia_responses_interaction_step_id'), 'ia_responses', ['interaction_step_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ia_responses_interaction_step_id'), table_name='ia_responses')
    op.drop_index(op.f('ix_ia_responses_ia_provider_name'), table_name='ia_responses')
    op.drop_index(op.f('ix_ia_responses_deleted_at'), table_name='ia_responses')
    op.drop_table('ia_responses')
    op.drop_index(op.f('ix_interaction_steps_step_order'), table_name='interaction_steps')
    op.drop_index(op.f('ix_interaction_steps_session_id'), table_name='interaction_steps')
    op.drop_index(op.f('ix_interaction_steps_deleted_at'), table_name='interaction_steps')
    op.drop_table('interaction_steps')
    op.drop_index(op.f('ix_research_sessions_user_id'), table_name='research_sessions')
    op.drop_index(op.f('ix_research_sessions_project_id'), table_name='research_sessions')
    op.drop_index(op.f('ix_research_sessions_deleted_at'), table_name='research_sessions')
    op.drop_table('research_sessions')
    op.drop_index(op.f('ix_context_chunks_user_id'), table_name='context_chunks')
    op.drop_index(op.f('ix_context_chunks_source_type'), table_name='context_chunks')
    op.drop_index(op.f('ix_context_chunks_source_identifier'), table_name='context_chunks')
    op.drop_index(op.f('ix_context_chunks_project_id'), table_name='context_chunks')
    op.drop_index(op.f('ix_context_chunks_deleted_at'), table_name='context_chunks')
    op.drop_table('context_chunks')
    op.drop_index(op.f('ix_projects_user_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_deleted_at'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_deleted_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_moderated_syntheses_deleted_at'), table_name='moderated_syntheses')
    op.drop_table('moderated_syntheses')
    # ### end Alembic commands ###

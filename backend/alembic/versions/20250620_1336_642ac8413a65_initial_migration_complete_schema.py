"""initial_migration_complete_schema

Revision ID: 642ac8413a65
Revises: 
Create Date: 2025-06-20 13:36:48.554688

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import pgvector.sqlalchemy
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '642ac8413a65'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('moderated_syntheses',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('synthesis_text', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_moderated_syntheses_deleted_at'), 'moderated_syntheses', ['deleted_at'], unique=False)
    op.create_table('users',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('google_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_deleted_at'), 'users', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_table('projects',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('moderator_personality', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('moderator_temperature', sa.Float(), nullable=False),
    sa.Column('moderator_length_penalty', sa.Float(), nullable=False),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_deleted_at'), 'projects', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_projects_user_id'), 'projects', ['user_id'], unique=False)
    op.create_table('chats',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chats_deleted_at'), 'chats', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_chats_project_id'), 'chats', ['project_id'], unique=False)
    op.create_index(op.f('ix_chats_user_id'), 'chats', ['user_id'], unique=False)
    op.create_table('context_chunks',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('content_text', sa.Text(), nullable=False),
    sa.Column('content_embedding', pgvector.sqlalchemy.Vector(dim=1536), nullable=False),
    sa.Column('source_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source_identifier', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_context_chunks_deleted_at'), 'context_chunks', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_context_chunks_project_id'), 'context_chunks', ['project_id'], unique=False)
    op.create_index(op.f('ix_context_chunks_source_identifier'), 'context_chunks', ['source_identifier'], unique=False)
    op.create_index(op.f('ix_context_chunks_source_type'), 'context_chunks', ['source_type'], unique=False)
    op.create_index(op.f('ix_context_chunks_user_id'), 'context_chunks', ['user_id'], unique=False)
    op.create_table('ia_prompts',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('context_session_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('original_query', sa.Text(), nullable=False),
    sa.Column('generated_prompt', sa.Text(), nullable=False),
    sa.Column('is_edited', sa.Boolean(), nullable=False),
    sa.Column('edited_prompt', sa.Text(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ia_prompts_context_session_id'), 'ia_prompts', ['context_session_id'], unique=False)
    op.create_index(op.f('ix_ia_prompts_deleted_at'), 'ia_prompts', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_ia_prompts_project_id'), 'ia_prompts', ['project_id'], unique=False)
    op.create_index(op.f('ix_ia_prompts_status'), 'ia_prompts', ['status'], unique=False)
    op.create_table('interaction_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('user_prompt_text', sa.Text(), nullable=False),
    sa.Column('context_used_summary', sa.Text(), nullable=True),
    sa.Column('moderated_synthesis_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('user_feedback_score', sa.Integer(), nullable=True),
    sa.Column('user_feedback_comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ai_responses_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('moderator_synthesis_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('context_used', sa.Boolean(), nullable=False),
    sa.Column('context_preview', sa.String(length=500), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('interaction_type', sa.String(length=50), nullable=False),
    sa.Column('session_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['moderated_synthesis_id'], ['moderated_syntheses.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interaction_events_created_at'), 'interaction_events', ['created_at'], unique=False)
    op.create_index(op.f('ix_interaction_events_deleted_at'), 'interaction_events', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_interaction_events_project_id'), 'interaction_events', ['project_id'], unique=False)
    op.create_index(op.f('ix_interaction_events_user_id'), 'interaction_events', ['user_id'], unique=False)
    op.create_table('ia_responses',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('ia_prompt_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('ia_provider_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('raw_response_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('latency_ms', sa.Integer(), nullable=False),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('received_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ia_prompt_id'], ['ia_prompts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ia_responses_deleted_at'), 'ia_responses', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_ia_responses_ia_prompt_id'), 'ia_responses', ['ia_prompt_id'], unique=False)
    op.create_index(op.f('ix_ia_responses_ia_provider_name'), 'ia_responses', ['ia_provider_name'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('chat_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('previous_session_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('accumulated_context', sa.Text(), nullable=False),
    sa.Column('final_question', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('order_index', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['previous_session_id'], ['sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_chat_id'), 'sessions', ['chat_id'], unique=False)
    op.create_index(op.f('ix_sessions_deleted_at'), 'sessions', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_sessions_previous_session_id'), 'sessions', ['previous_session_id'], unique=False)
    op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sessions_user_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_previous_session_id'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_deleted_at'), table_name='sessions')
    op.drop_index(op.f('ix_sessions_chat_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_ia_responses_ia_provider_name'), table_name='ia_responses')
    op.drop_index(op.f('ix_ia_responses_ia_prompt_id'), table_name='ia_responses')
    op.drop_index(op.f('ix_ia_responses_deleted_at'), table_name='ia_responses')
    op.drop_table('ia_responses')
    op.drop_index(op.f('ix_interaction_events_user_id'), table_name='interaction_events')
    op.drop_index(op.f('ix_interaction_events_project_id'), table_name='interaction_events')
    op.drop_index(op.f('ix_interaction_events_deleted_at'), table_name='interaction_events')
    op.drop_index(op.f('ix_interaction_events_created_at'), table_name='interaction_events')
    op.drop_table('interaction_events')
    op.drop_index(op.f('ix_ia_prompts_status'), table_name='ia_prompts')
    op.drop_index(op.f('ix_ia_prompts_project_id'), table_name='ia_prompts')
    op.drop_index(op.f('ix_ia_prompts_deleted_at'), table_name='ia_prompts')
    op.drop_index(op.f('ix_ia_prompts_context_session_id'), table_name='ia_prompts')
    op.drop_table('ia_prompts')
    op.drop_index(op.f('ix_context_chunks_user_id'), table_name='context_chunks')
    op.drop_index(op.f('ix_context_chunks_source_type'), table_name='context_chunks')
    op.drop_index(op.f('ix_context_chunks_source_identifier'), table_name='context_chunks')
    op.drop_index(op.f('ix_context_chunks_project_id'), table_name='context_chunks')
    op.drop_index(op.f('ix_context_chunks_deleted_at'), table_name='context_chunks')
    op.drop_table('context_chunks')
    op.drop_index(op.f('ix_chats_user_id'), table_name='chats')
    op.drop_index(op.f('ix_chats_project_id'), table_name='chats')
    op.drop_index(op.f('ix_chats_deleted_at'), table_name='chats')
    op.drop_table('chats')
    op.drop_index(op.f('ix_projects_user_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_deleted_at'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_deleted_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_moderated_syntheses_deleted_at'), table_name='moderated_syntheses')
    op.drop_table('moderated_syntheses')
    # ### end Alembic commands ###
